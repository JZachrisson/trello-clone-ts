[{"/Users/jesper/Desktop/code/trello-clone-ts/src/index.tsx":"1","/Users/jesper/Desktop/code/trello-clone-ts/src/App.tsx":"2","/Users/jesper/Desktop/code/trello-clone-ts/src/styles.ts":"3","/Users/jesper/Desktop/code/trello-clone-ts/src/Column.tsx":"4","/Users/jesper/Desktop/code/trello-clone-ts/src/Card.tsx":"5","/Users/jesper/Desktop/code/trello-clone-ts/src/AddNewItem.tsx":"6","/Users/jesper/Desktop/code/trello-clone-ts/src/NewItemForm.tsx":"7","/Users/jesper/Desktop/code/trello-clone-ts/src/useFocus.ts":"8","/Users/jesper/Desktop/code/trello-clone-ts/src/AppStateContext.tsx":"9","/Users/jesper/Desktop/code/trello-clone-ts/src/utils/findItemIndexById.ts":"10","/Users/jesper/Desktop/code/trello-clone-ts/src/utils/moveItem.ts":"11","/Users/jesper/Desktop/code/trello-clone-ts/src/hooks/useItemDrag.ts":"12","/Users/jesper/Desktop/code/trello-clone-ts/src/DragItem.ts":"13","/Users/jesper/Desktop/code/trello-clone-ts/src/utils/isHidden.ts":"14","/Users/jesper/Desktop/code/trello-clone-ts/src/CustomDragLayer.tsx":"15"},{"size":432,"mtime":1611582847467,"results":"16","hashOfConfig":"17"},{"size":721,"mtime":1611601646613,"results":"18","hashOfConfig":"17"},{"size":2077,"mtime":1611603560289,"results":"19","hashOfConfig":"17"},{"size":1529,"mtime":1611586798574,"results":"20","hashOfConfig":"17"},{"size":209,"mtime":1611224944064,"results":"21","hashOfConfig":"17"},{"size":687,"mtime":1611226811699,"results":"22","hashOfConfig":"17"},{"size":623,"mtime":1611227350955,"results":"23","hashOfConfig":"17"},{"size":193,"mtime":1611227267824,"results":"24","hashOfConfig":"17"},{"size":2731,"mtime":1611586218720,"results":"25","hashOfConfig":"17"},{"size":171,"mtime":1611266077547,"results":"26","hashOfConfig":"17"},{"size":222,"mtime":1611328330714,"results":"27","hashOfConfig":"17"},{"size":670,"mtime":1611603527353,"results":"28","hashOfConfig":"17"},{"size":139,"mtime":1611564313361,"results":"29","hashOfConfig":"17"},{"size":253,"mtime":1611586715917,"results":"30","hashOfConfig":"17"},{"size":939,"mtime":1611601464356,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"vfbkrc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jesper/Desktop/code/trello-clone-ts/src/index.tsx",[],["64","65"],"/Users/jesper/Desktop/code/trello-clone-ts/src/App.tsx",["66"],"/Users/jesper/Desktop/code/trello-clone-ts/src/styles.ts",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/Column.tsx",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/Card.tsx",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/AddNewItem.tsx",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/NewItemForm.tsx",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/useFocus.ts",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/AppStateContext.tsx",["67"],"import React, { createContext, useReducer, useContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { findItemIndexById } from './utils/findItemIndexById';\nimport { moveItem } from './utils/moveItem';\nimport { DragItem } from './DragItem';\nimport { Console } from 'console';\n\ninterface AppStateContextProps {\n  state: AppState;\n  dispatch: any;\n}\n\nconst AppStateContext = createContext<AppStateContextProps>(\n  {} as AppStateContextProps\n);\n\ntype Action =\n  | {\n      type: 'ADD_LIST';\n      payload: string;\n    }\n  | {\n      type: 'ADD_TASK';\n      payload: {\n        text: string;\n        taskId: string;\n      };\n    }\n  | {\n      type: 'MOVE_LIST';\n      payload: {\n        dragIndex: number;\n        hoverIndex: number;\n      };\n    }\n  | {\n      type: 'SET_DRAGGED_ITEM';\n      payload: DragItem | undefined;\n    };\n\nconst appStateReducer = (state: AppState, action: Action): AppState => {\n  switch (action.type) {\n    case 'ADD_LIST': {\n      return {\n        ...state,\n        lists: [\n          ...state.lists,\n          { id: uuidv4(), text: action.payload, tasks: [] },\n        ],\n      };\n    }\n    case 'ADD_TASK': {\n      const targetLaneIndex = findItemIndexById(\n        state.lists,\n        action.payload.taskId\n      );\n      state.lists[targetLaneIndex].tasks.push({\n        id: uuidv4(),\n        text: action.payload.text,\n      });\n      return {\n        ...state,\n      };\n    }\n    case 'MOVE_LIST': {\n      const { dragIndex, hoverIndex } = action.payload;\n      state.lists = moveItem(state.lists, dragIndex, hoverIndex);\n      return { ...state };\n    }\n    case 'SET_DRAGGED_ITEM': {\n      return { ...state, draggedItem: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst appData: AppState = {\n  draggedItem: undefined,\n  lists: [\n    {\n      id: '0',\n      text: 'To Do',\n      tasks: [{ id: 'c0', text: 'Generate app scaffold' }],\n    },\n    {\n      id: '1',\n      text: 'In progress',\n      tasks: [{ id: 'c2', text: 'Learn TypeScript' }],\n    },\n    {\n      id: '2',\n      text: 'Done',\n      tasks: [{ id: 'c3', text: 'Begin to use static typing' }],\n    },\n  ],\n};\n\ninterface Task {\n  id: string;\n  text: string;\n}\n\ninterface List {\n  id: string;\n  text: string;\n  tasks: Task[];\n}\n\nexport interface AppState {\n  draggedItem: DragItem | undefined;\n  lists: List[];\n}\n\nexport const useAppState = () => {\n  return useContext(AppStateContext);\n};\n\nexport const AppStateProvider = ({ children }: React.PropsWithChildren<{}>) => {\n  const [state, dispatch] = useReducer(appStateReducer, appData);\n  return (\n    <AppStateContext.Provider\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      {children}\n    </AppStateContext.Provider>\n  );\n};\n","/Users/jesper/Desktop/code/trello-clone-ts/src/utils/findItemIndexById.ts",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/utils/moveItem.ts",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/hooks/useItemDrag.ts",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/DragItem.ts",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/utils/isHidden.ts",[],"/Users/jesper/Desktop/code/trello-clone-ts/src/CustomDragLayer.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":17},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Console' is defined but never used.","no-global-assign","no-unsafe-negation"]